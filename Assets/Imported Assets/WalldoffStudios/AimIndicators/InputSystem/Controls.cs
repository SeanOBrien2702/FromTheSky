////------------------------------------------------------------------------------
//// <auto-generated>
////     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
////     version 1.3.0
////     from Assets/WalldoffStudios/InputSystem/Controls.inputactions
////
////     Changes to this file may cause incorrect behavior and will be lost if
////     the code is regenerated.
//// </auto-generated>
////------------------------------------------------------------------------------

//using System;
//using System.Collections;
//using System.Collections.Generic;
//using UnityEngine.InputSystem;
//using UnityEngine.InputSystem.Utilities;

//namespace WalldoffStudios
//{
//    public partial class @Controls : IInputActionCollection2, IDisposable
//    {
//        public InputActionAsset asset { get; }

//        public @Controls()
//        {
//            asset = InputActionAsset.FromJson(@"{
//    ""name"": ""Controls"",
//    ""maps"": [
//        {
//            ""name"": ""Gameplay"",
//            ""id"": ""c677f442-ef1d-4cd8-b608-e63515d58565"",
//            ""actions"": [
//                {
//                    ""name"": ""Movement"",
//                    ""type"": ""Value"",
//                    ""id"": ""0fe04f4c-e6fc-463c-8c12-e6cb1975eef8"",
//                    ""expectedControlType"": ""Vector2"",
//                    ""processors"": ""NormalizeVector2"",
//                    ""interactions"": """",
//                    ""initialStateCheck"": true
//                },
//                {
//                    ""name"": ""Aiming"",
//                    ""type"": ""Value"",
//                    ""id"": ""3bd9fae6-2552-4c1c-9609-01f4da018491"",
//                    ""expectedControlType"": ""Stick"",
//                    ""processors"": ""StickDeadzone"",
//                    ""interactions"": """",
//                    ""initialStateCheck"": true
//                },
//                {
//                    ""name"": ""Attack"",
//                    ""type"": ""Button"",
//                    ""id"": ""fe91cb4e-29da-48ce-bd88-eec00956440b"",
//                    ""expectedControlType"": ""Button"",
//                    ""processors"": """",
//                    ""interactions"": ""Tap"",
//                    ""initialStateCheck"": false
//                },
//                {
//                    ""name"": ""Reset"",
//                    ""type"": ""Button"",
//                    ""id"": ""e32bed77-7b4d-4664-9c3a-cc25f6180a4f"",
//                    ""expectedControlType"": ""Button"",
//                    ""processors"": """",
//                    ""interactions"": ""Tap"",
//                    ""initialStateCheck"": false
//                },
//                {
//                    ""name"": ""ToggleRight"",
//                    ""type"": ""Button"",
//                    ""id"": ""e559a476-edbf-4325-b69b-7166bd6d2b1e"",
//                    ""expectedControlType"": ""Button"",
//                    ""processors"": """",
//                    ""interactions"": ""Tap"",
//                    ""initialStateCheck"": false
//                },
//                {
//                    ""name"": ""ToggleLeft"",
//                    ""type"": ""Button"",
//                    ""id"": ""622420f8-622f-4b1b-ad6d-d9e213aa2be1"",
//                    ""expectedControlType"": ""Button"",
//                    ""processors"": """",
//                    ""interactions"": ""Tap"",
//                    ""initialStateCheck"": false
//                }
//            ],
//            ""bindings"": [
//                {
//                    ""name"": """",
//                    ""id"": ""f26584dd-6e4d-4dd6-95ef-813ac6f789ea"",
//                    ""path"": ""<Gamepad>/leftStick"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Movement"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": ""WASD"",
//                    ""id"": ""ab90628d-60bf-432a-9300-2adda75b32a8"",
//                    ""path"": ""2DVector"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Movement"",
//                    ""isComposite"": true,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": ""up"",
//                    ""id"": ""62b288f7-3f66-49eb-b720-9f479c8df7f4"",
//                    ""path"": ""<Keyboard>/w"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Movement"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": true
//                },
//                {
//                    ""name"": ""down"",
//                    ""id"": ""ce4bd028-b8f7-4729-84fa-a354a93d2a4e"",
//                    ""path"": ""<Keyboard>/s"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Movement"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": true
//                },
//                {
//                    ""name"": ""left"",
//                    ""id"": ""38e6cc6a-3faa-4865-98d7-ec401251f20e"",
//                    ""path"": ""<Keyboard>/a"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Movement"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": true
//                },
//                {
//                    ""name"": ""right"",
//                    ""id"": ""c9f9b2cb-1ce3-4bf7-a315-47efb50e6f1f"",
//                    ""path"": ""<Keyboard>/d"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Movement"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": true
//                },
//                {
//                    ""name"": """",
//                    ""id"": ""f7d691ca-38ea-4ef5-94ef-309572381b63"",
//                    ""path"": ""<Gamepad>/rightStick"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Aiming"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": """",
//                    ""id"": ""285179c5-5cfa-416c-af1e-7883b2208b9f"",
//                    ""path"": ""<Gamepad>/rightTrigger"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Attack"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": """",
//                    ""id"": ""2bf0c5b1-09fc-46b4-8614-8609b8f2dcfa"",
//                    ""path"": ""<Keyboard>/e"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Attack"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": """",
//                    ""id"": ""8db7ab4e-3a0b-4544-8b40-9d027d24579a"",
//                    ""path"": ""<Gamepad>/leftTrigger"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Reset"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": """",
//                    ""id"": ""d0fddaeb-95a2-47e2-a577-82b0b70759ca"",
//                    ""path"": ""<Keyboard>/r"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""Reset"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": """",
//                    ""id"": ""e76d6bd6-c0ed-4c0f-a6c2-524dd75eeee7"",
//                    ""path"": ""<Gamepad>/rightShoulder"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""ToggleRight"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": """",
//                    ""id"": ""c16c7b08-e5f9-4514-a804-b46805bee306"",
//                    ""path"": ""<Keyboard>/g"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""ToggleRight"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": """",
//                    ""id"": ""57710b42-10b6-4262-be6c-36cb0011379c"",
//                    ""path"": ""<Gamepad>/leftShoulder"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""ToggleLeft"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                },
//                {
//                    ""name"": """",
//                    ""id"": ""dc925dbd-7cea-4d44-89ea-20a0a72fabfc"",
//                    ""path"": ""<Keyboard>/f"",
//                    ""interactions"": """",
//                    ""processors"": """",
//                    ""groups"": """",
//                    ""action"": ""ToggleLeft"",
//                    ""isComposite"": false,
//                    ""isPartOfComposite"": false
//                }
//            ]
//        }
//    ],
//    ""controlSchemes"": []
//}");
//            // Gameplay
//            m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
//            m_Gameplay_Movement = m_Gameplay.FindAction("Movement", throwIfNotFound: true);
//            m_Gameplay_Aiming = m_Gameplay.FindAction("Aiming", throwIfNotFound: true);
//            m_Gameplay_Attack = m_Gameplay.FindAction("Attack", throwIfNotFound: true);
//            m_Gameplay_Reset = m_Gameplay.FindAction("Reset", throwIfNotFound: true);
//            m_Gameplay_ToggleRight = m_Gameplay.FindAction("ToggleRight", throwIfNotFound: true);
//            m_Gameplay_ToggleLeft = m_Gameplay.FindAction("ToggleLeft", throwIfNotFound: true);
//        }

//        public void Dispose()
//        {
//            UnityEngine.Object.Destroy(asset);
//        }

//        public InputBinding? bindingMask
//        {
//            get => asset.bindingMask;
//            set => asset.bindingMask = value;
//        }

//        public ReadOnlyArray<InputDevice>? devices
//        {
//            get => asset.devices;
//            set => asset.devices = value;
//        }

//        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

//        public bool Contains(InputAction action)
//        {
//            return asset.Contains(action);
//        }

//        public IEnumerator<InputAction> GetEnumerator()
//        {
//            return asset.GetEnumerator();
//        }

//        IEnumerator IEnumerable.GetEnumerator()
//        {
//            return GetEnumerator();
//        }

//        public void Enable()
//        {
//            asset.Enable();
//        }

//        public void Disable()
//        {
//            asset.Disable();
//        }

//        public IEnumerable<InputBinding> bindings => asset.bindings;

//        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
//        {
//            return asset.FindAction(actionNameOrId, throwIfNotFound);
//        }

//        public int FindBinding(InputBinding bindingMask, out InputAction action)
//        {
//            return asset.FindBinding(bindingMask, out action);
//        }

//        // Gameplay
//        private readonly InputActionMap m_Gameplay;
//        private IGameplayActions m_GameplayActionsCallbackInterface;
//        private readonly InputAction m_Gameplay_Movement;
//        private readonly InputAction m_Gameplay_Aiming;
//        private readonly InputAction m_Gameplay_Attack;
//        private readonly InputAction m_Gameplay_Reset;
//        private readonly InputAction m_Gameplay_ToggleRight;
//        private readonly InputAction m_Gameplay_ToggleLeft;

//        public struct GameplayActions
//        {
//            private @Controls m_Wrapper;

//            public GameplayActions(@Controls wrapper)
//            {
//                m_Wrapper = wrapper;
//            }

//            public InputAction @Movement => m_Wrapper.m_Gameplay_Movement;
//            public InputAction @Aiming => m_Wrapper.m_Gameplay_Aiming;
//            public InputAction @Attack => m_Wrapper.m_Gameplay_Attack;
//            public InputAction @Reset => m_Wrapper.m_Gameplay_Reset;
//            public InputAction @ToggleRight => m_Wrapper.m_Gameplay_ToggleRight;
//            public InputAction @ToggleLeft => m_Wrapper.m_Gameplay_ToggleLeft;

//            public InputActionMap Get()
//            {
//                return m_Wrapper.m_Gameplay;
//            }

//            public void Enable()
//            {
//                Get().Enable();
//            }

//            public void Disable()
//            {
//                Get().Disable();
//            }

//            public bool enabled => Get().enabled;

//            public static implicit operator InputActionMap(GameplayActions set)
//            {
//                return set.Get();
//            }

//            public void SetCallbacks(IGameplayActions instance)
//            {
//                if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
//                {
//                    @Movement.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
//                    @Movement.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
//                    @Movement.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
//                    @Aiming.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAiming;
//                    @Aiming.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAiming;
//                    @Aiming.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAiming;
//                    @Attack.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
//                    @Attack.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
//                    @Attack.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
//                    @Reset.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnReset;
//                    @Reset.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnReset;
//                    @Reset.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnReset;
//                    @ToggleRight.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnToggleRight;
//                    @ToggleRight.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnToggleRight;
//                    @ToggleRight.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnToggleRight;
//                    @ToggleLeft.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnToggleLeft;
//                    @ToggleLeft.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnToggleLeft;
//                    @ToggleLeft.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnToggleLeft;
//                }

//                m_Wrapper.m_GameplayActionsCallbackInterface = instance;
//                if (instance != null)
//                {
//                    @Movement.started += instance.OnMovement;
//                    @Movement.performed += instance.OnMovement;
//                    @Movement.canceled += instance.OnMovement;
//                    @Aiming.started += instance.OnAiming;
//                    @Aiming.performed += instance.OnAiming;
//                    @Aiming.canceled += instance.OnAiming;
//                    @Attack.started += instance.OnAttack;
//                    @Attack.performed += instance.OnAttack;
//                    @Attack.canceled += instance.OnAttack;
//                    @Reset.started += instance.OnReset;
//                    @Reset.performed += instance.OnReset;
//                    @Reset.canceled += instance.OnReset;
//                    @ToggleRight.started += instance.OnToggleRight;
//                    @ToggleRight.performed += instance.OnToggleRight;
//                    @ToggleRight.canceled += instance.OnToggleRight;
//                    @ToggleLeft.started += instance.OnToggleLeft;
//                    @ToggleLeft.performed += instance.OnToggleLeft;
//                    @ToggleLeft.canceled += instance.OnToggleLeft;
//                }
//            }
//        }

//        public GameplayActions @Gameplay => new GameplayActions(this);

//        public interface IGameplayActions
//        {
//            void OnMovement(InputAction.CallbackContext context);
//            void OnAiming(InputAction.CallbackContext context);
//            void OnAttack(InputAction.CallbackContext context);
//            void OnReset(InputAction.CallbackContext context);
//            void OnToggleRight(InputAction.CallbackContext context);
//            void OnToggleLeft(InputAction.CallbackContext context);
//        }
//    }
//}